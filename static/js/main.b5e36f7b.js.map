{"version":3,"file":"static/js/main.b5e36f7b.js","mappings":"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","sources":["../node_modules/@babel/runtime/helpers/esm/classCallCheck.js","../node_modules/@babel/runtime/helpers/esm/createClass.js","Classes/Point.ts","Classes/Line.ts","index.tsx","Classes/Canvas.ts"],"sourcesContent":["export default function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}","function _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nexport default function _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  Object.defineProperty(Constructor, \"prototype\", {\n    writable: false\n  });\n  return Constructor;\n}","export default class Point {\n  public x: number;\n  public y: number;\n\n  /**\n   * @param {number} [x = 0]\n   * @param {number} [y = 0]\n   */\n  constructor(x: number = 0, y: number = 0) {\n    /** @var {number} - is position on OX axis */\n    this.x = x;\n\n    /** @var {number} - is position on OY axis */\n    this.y = y;\n  }\n\n  draw(ctx: any, color: string = 'red') {\n    console.log(ctx);\n    if (ctx) {\n      ctx.beginPath();\n      ctx.fillStyle = color;\n      ctx.arc(this.x, this.y, 3, 0, 360, false);\n      ctx.stroke();\n      ctx.fill();\n    }\n  }\n}","import Point from \"./Point\";\nexport default class Line {\n  public start: Point;\n  public end: Point;\n\n  /**\n   * @param {Point} start\n   * @param {Point} end\n   */\n  constructor(start: Point, end: Point) {\n    if (!start || !end) {\n      throw new Error(\"Can't create Line with these points\");\n    }\n\n    this.start = start;\n    this.end = end;\n  }\n\n  /**\n   * @return {number} - the A coefficient in Ax+By+C=0\n   * @constructor\n   */\n  getA(): number {\n    return this.start.y - this.end.y;\n  }\n\n  /**\n   * @return {number} - the B coefficient in Ax+By+C=0\n   * @constructor\n   */\n  getB(): number {\n    return this.end.x - this.start.x;\n  }\n\n  /**\n   * @return {number} - the C coefficient in Ax+By+C=0\n   * @constructor\n   */\n  getC(): number {\n    return this.start.x * (this.end.y - this.start.y)\n      + this.start.y * (this.start.x - this.end.x);\n  }\n\n  /**\n   * @return {Point | null} - the point of intersection of two straight lines\n   * - solving linear systems using Cramer's Rule\n   */\n\n  getPointCrossWithLine(line: Line): Point | null {\n    const delta: number = this.getA() * line.getB() - this.getB() * line.getA();\n    const delta1: number = -this.getC() * line.getB() - this.getB() * (-line.getC());\n    const delta2: number = this.getA() * (-line.getC()) + this.getC() * line.getA();\n\n    if (delta) {\n      return new Point(delta1 / delta, delta2 / delta);\n    }\n\n    return null;\n  }\n\n  getMiddlePoint() {\n    const xMiddle = (this.start.x + this.end.x) / 2;\n    const yMiddle = (this.start.y + this.end.y) / 2;\n\n    return new Point(xMiddle, yMiddle);\n  }\n\n  isBelongPointToLine(point: Point) {\n    if (((this.start.x <= point.x && point.x <= this.end.x)\n      || (this.start.x >= point.x && point.x >= this.end.x))\n      && ((this.start.y <= point.y && point.y <= this.end.y)\n        || (this.start.y >= point.y && point.y >= this.end.y))) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n}","// import React from 'react';\n// import ReactDOM from 'react-dom/client';\nimport './index.css';\nimport Canvas from \"./Classes/Canvas\";\n// import App from './App';\n// import reportWebVitals from './reportWebVitals';\n\n// const root = ReactDOM.createRoot(\n//   document.getElementById('root') as HTMLElement\n// );\n// root.render(\n//   <React.StrictMode>\n//     <App />\n//   </React.StrictMode>\n// );\n\nconst canvas = new Canvas(document.getElementById('canvas') as HTMLCanvasElement, 750, 450);\n\nconst button = document.getElementById('btn');\nif (button) {\n  button.onclick = () => {\n    if (!canvas.isPressed) {\n      canvas.animation();\n    };\n\n    canvas.isPressed = true;\n  }\n}\n\n","import Point from \"./Point\";\nimport Line from \"./Line\";\n\nexport default class Canvas {\n  addEventListener(arg0: string, arg1: (event: any) => void) {\n    throw new Error('Method not implemented.');\n  }\n  public canvas: HTMLCanvasElement;\n  public context: CanvasRenderingContext2D | null;\n  public isPressed: boolean;\n  public isStart: boolean;\n  public startXY: Point | null = null;\n  public allLines: Line[] = [];\n  public allPointsCross: Point[] = [];\n\n  constructor(element: HTMLCanvasElement, width: number, height: number) {\n    this.isStart = true;\n    this.isPressed = false;\n    this.canvas = element;\n    this.canvas.width = width;\n    this.canvas.height = height;\n    this.context = this.canvas.getContext(\"2d\");\n    this.canvas.addEventListener(\"click\", this.handleClick.bind(this));\n    this.canvas.addEventListener(\"contextmenu\", this.handleContextmenu.bind(this));\n    this.canvas.addEventListener(\"mousemove\", this.handleMousemove.bind(this));\n  }\n\n  handleClick(event: any) {\n\n    if (this.isPressed) {\n      return;\n    }\n\n    if (this.isStart) {\n      this.startXY = new Point(event.offsetX, event.offsetY);\n      this.isStart = false;\n\n    } else {\n      const endXY = new Point(event.offsetX, event.offsetY);\n      this.allLines.push(new Line(this.startXY as Point, endXY));\n      this.drawPoints();\n      this.findAllCroosPoints();\n      this.isStart = true;\n    }\n  }\n\n  drawPoints() {\n\n    console.log(this.allPointsCross);\n    this.allPointsCross.forEach(point => {\n\n      point.draw(this.context, 'red');\n    });\n\n    this.context?.stroke();\n  };\n\n  findAllCroosPoints() {\n    console.log(this.allLines);\n    this.allPointsCross = [];\n    if (this.allLines.length > 1) {\n      for (let i = 0; i < this.allLines.length; i++) {\n        for (let j = i + 1; j < this.allLines.length; j++) {\n          const temp = this.allLines[i].getPointCrossWithLine(this.allLines[j]);\n          if (temp) {\n            if (this.allLines[i].isBelongPointToLine(temp) && this.allLines[j].isBelongPointToLine(temp)) {\n              this.allPointsCross.push(temp);\n            }\n          }\n        }\n      }\n    }\n  };\n\n  handleContextmenu(event: any) {\n    this.context?.clearRect(0, 0, this.canvas.width, this.canvas.height);\n    this.drawLine();\n    this.drawPoints();\n    this.isStart = true;\n  }\n\n  handleMousemove(event: any) {\n    if (!(this.isStart || this.isPressed)) {\n      this.context?.clearRect(0, 0, this.canvas.width, this.canvas.height);\n      if (this.startXY) {\n        this.context?.moveTo(this.startXY.x, this.startXY.y);\n      }\n      this.context?.lineTo(event.offsetX, event.offsetY);\n      this.context?.stroke();\n\n      this.drawLine();\n      this.drawPoints();\n      let currentLine = null;\n\n      if (this.startXY) {\n        currentLine = new Line(this.startXY, new Point(event.offsetX, event.offsetY));\n\n        for (let i = 0; i < this.allLines.length; i++) {\n          const point = currentLine.getPointCrossWithLine(this.allLines[i]);\n          if (point && this.allLines[i].isBelongPointToLine(point) && currentLine.isBelongPointToLine(point)) {\n            point.draw(this.context, 'red');\n          }\n        }\n      }\n    }\n  }\n\n  drawLine() {\n    if (this.context) {\n      this.context?.beginPath();\n      this.allLines.forEach(line => {\n        this.context?.moveTo(line.start.x, line.start.y);\n        this.context?.lineTo(line.end.x, line.end.y);\n      });\n\n      this.context?.stroke();\n    }\n  };\n\n  animation() {\n    let start: number;\n    let previousTimeStamp: number;\n    const timeanimation = 3000;\n\n    const animate = (timestamp: number) => {\n\n      if (start === undefined) {\n        start = timestamp;\n      }\n\n      let elapsed = timestamp - start;\n\n      if (previousTimeStamp !== timestamp) {\n\n        if (this.context) {\n\n          this.context.clearRect(0, 0, this.canvas.width, this.canvas.height);\n          this.allLines.forEach(line => {\n            const startX = line.start.x;\n            const startY = line.start.y;\n            const endX = line.end.x;\n            const endY = line.end.y;\n            const middlepoint = line.getMiddlePoint();\n            middlepoint.draw(this.context, 'blue');\n            const dx = endX - startX;\n            const dy = endY - startY;\n            const sx = startX + dx * elapsed / (2 * timeanimation);\n            const sy = startY + dy * elapsed / (2 * timeanimation);\n            const ex = endX - dx * elapsed / (2 * timeanimation);\n            const ey = endY - dy * elapsed / (2 * timeanimation);\n            this.context?.beginPath();\n            this.context?.moveTo(sx, sy);\n            this.context?.lineTo(ex, ey);\n            this.context?.stroke();\n\n            const currentLine = new Line(new Point(sx, sy), new Point(ex, ey));\n\n            for (let i = 0; i < this.allLines.length; i++) {\n              this.allPointsCross.forEach(item => {\n                if (item) {\n                  if (this.allLines[i].isBelongPointToLine(item) && currentLine.isBelongPointToLine(item)) {\n                    item.draw(this.context, 'red');\n                  }\n                }\n              })\n            }\n          })\n        };\n      }\n      if (elapsed < timeanimation) {\n        previousTimeStamp = timestamp;\n        window.requestAnimationFrame(animate);\n      }\n    };\n    window.requestAnimationFrame(animate);\n  };\n}\n"],"names":["_classCallCheck","instance","Constructor","TypeError","_defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","_createClass","protoProps","staticProps","prototype","Point","x","y","this","ctx","color","console","log","beginPath","fillStyle","arc","stroke","fill","Line","start","end","Error","line","delta","getA","getB","delta1","getC","delta2","xMiddle","yMiddle","point","canvas","Canvas","element","width","height","context","isPressed","isStart","startXY","allLines","allPointsCross","getContext","addEventListener","handleClick","bind","handleContextmenu","handleMousemove","arg0","arg1","event","offsetX","offsetY","endXY","push","drawPoints","findAllCroosPoints","forEach","draw","j","temp","getPointCrossWithLine","isBelongPointToLine","clearRect","drawLine","moveTo","lineTo","currentLine","previousTimeStamp","timeanimation","window","requestAnimationFrame","animate","timestamp","undefined","elapsed","startX","startY","endX","endY","getMiddlePoint","dx","dy","sx","sy","ex","ey","item","document","getElementById","button","onclick","animation"],"sourceRoot":""}